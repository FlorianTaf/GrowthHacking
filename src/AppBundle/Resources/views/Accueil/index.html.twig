{% extends 'AppBundle:Accueil:base.html.twig' %}

{% block title %}Growth Hacking{% endblock %}

{% block body %}
    <div id="welcome-container">
        <h1>Growth Hacking</h1>
        <p>Welcome on GrowthHacking Bundle ! Hope you will grow faster now !</p>

        <div id="menu-container">
            <div id="isNotConnected">
                <h2 class="no-margin-bottom">Connexion via Facebook</h2>
                <div id="connexion-btn" class="btn darkblue-btn">Connexion</div>
            </div>
            <div id="isConnected">
                <h2 class="no-margin-bottom">Facebook</h2>
                <div id="page-btn" class="btn darkblue-btn">Find pages</div>
                <div id="added-page-btn" class="btn darkblue-btn">See added pages</div>
                <div id="user-btn" class="btn darkblue-btn">Contact users</div>
                <div id="contacted-user-btn" class="btn darkblue-btn">See contacted users</div>
                <h2 class="no-margin-bottom">Twitter</h2>
                <div id="find-twitter-user-btn" class="btn darkblue-btn">Contact users</div>
                <div id="contacted-twitter-user-btn" class="btn darkblue-btn">See contacted users</div>
            </div>
        </div>
    </div>
    <hr>
    <div id="loadUser">
        <i class="fa fa-spinner fa-spin" style="font-size:24px"></i>
    </div>

    <div id="search-page-container">
        <h2>Search by keywords</h2>
        <input id="input-keyword" class="input" placeholder="Entrez un mot-clé">
        <div id="sendData-btn" class="btn">Search</div>
        <div id="tab-data-page"></div>
    </div>

    <div id="added-page-container">
        <h2>Added pages</h2>
        <div id="del-pages-btn" class="btn red-btn" style="display: none;">Delete added pages</div>
        <br>
        <div id="tab-added-page"></div>
    </div>

    <div id="add-user-container">
        <h2>Contact users</h2>
        <div id="tab-data-user"></div>
    </div>

    <div id="contacted-user-container">
        <h2>Users contacted</h2>
        <div id="tab-contacted-user"></div>
    </div>

    <div id="search-twitter-user-container">
        <h2>Search by keywords in a tweet</h2>
        <input id="input-keyword-twitter" class="input" placeholder="Entrez un mot-clé">
        <div id="sendTwitterData-btn" class="btn">Send</div>
        <div id="tab-twitter-user"></div>
    </div>

    <div id="contacted-twitter-user-container">
        <h2>Users contacted</h2>
        <div id="tab-contacted-twitter-user"></div>
    </div>


{% endblock %}

{% block js %}
    <script>
        //switch the button style
        function switchButton(button) {
            //if it's a button to add a page
            if (button.hasClass("add-page")) {
                button.removeClass('add-page green-btn');
                button.addClass('suppr-page red-btn');

                button.html('Delete');
            }
            else if (button.hasClass("suppr-page")) {
                button.addClass('add-page green-btn');
                button.removeClass('suppr-page red-btn');

                button.html('Add');
            }
            else if (button.hasClass("contact-user-btn")) {
                button.removeClass('contact-user-btn green-btn');
                button.addClass('already-contacted-btn red-btn');

                button.html('Profile already seen');
            }
            else if (button.hasClass("contact-twitter-user-btn")) {
                button.removeClass('contact-twitter-user-btn green-btn');
                button.addClass('already-contacted-btn red-btn');

                button.html('Profile already seen');
            }
        }

        window.fbAsyncInit = function () {
            FB.init({
                appId: '151487542123473',
                autoLogAppEvents: true,
                xfbml: true,
                version: 'v2.10',
                //status: false
            });
            console.log("FbasyncInit");
            FB.AppEvents.logPageView();

            $(document).ready(function () {
                var accessToken;
                var pages;
                var email;
                var usersTwitterContacted;
                var usersFacebookContacted;

                /*
                 * After we get token we can do what we want
                 */
                //if we click to display the search page interface
                $(document).on("click", "#connexion-btn", function () {
                    FB.login(function (response) {
                        if (response.authResponse) {
                            console.log('Welcome!  Fetching your information.... ');
                            accessToken = response.authResponse.accessToken;
                            FB.api('/me?fields=name,email', function (response) {
                                var idUser = response.id;
                                var nameUser = response.name;
                                console.log('Good to see you, ' + response.name + '.');
                                console.log('Email : ' + response.email);

                                //On va vérifier si l'email est présent chez BlueSquare Computing
                                email = response.email;
                                var path = Routing.generate('growth_ajax_user_bluesquare');
                                var json = { "email" : email };
                                $('#loadUser').show();

                                $.post(path, json, function (response) {
                                    $('#loadUser').hide();
                                    var userExists = response.response.userInBDD;
                                    if (userExists == false) {
                                        toastr8.error({
                                            title: "Inscription to BlueSquare mandatory !",
                                            message: "You're not registered to http://www.bluesquare.io !",
                                            iconClass: "fa fa-warning",
                                            timeOut: 5000
                                        });
                                    }
                                    else {
                                        var path = Routing.generate('growth_check_user_bdd');
                                        var json = {"email" : email};
                                        $.post(path, json, function (response) {
                                            //On enregistre nos pages ajoutées et utilisateurs contactés pour l'utilisateur qui vient de s'identifier
                                            pages = response.pages;
                                            usersTwitterContacted = response.usersTwitterContacted;
                                            usersFacebookContacted = response.usersFacebookContacted;

                                            var userImg = "http://graph.facebook.com/" + idUser + "/picture?type=normal";
                                            toastr8.facebook({
                                                message: 'Hello ' + nameUser + ' !',
                                                title: "Connexion successfull !",
                                                imgURI: userImg,
                                                timeOut: 5000
                                            });
                                            $('#isConnected').show();
                                            $('#isNotConnected').hide();
                                        });
                                    }
                                });
                            });

                        } else {
                            console.log('User cancelled login or did not fully authorize.');
                            toastr8.error({
                                title: "Connexion mandatory !",
                                message: "You must login on Facebook first to access Growth Hacking !",
                                iconClass: "fa fa-warning",
                                timeOut: 5000
                            });
                        }
                    }, {scope: 'email'});
                });

                //if we click to display the search page interface
                $(document).on('click', '#page-btn', function () {
                    getLoginStatus('pages')
                });

                //if we click to display the search user interface
                $(document).on("click", "#user-btn", function () {
                    getLoginStatus('users');

                    //search new users
                    $('#tab-data-user').html('Loading ..');

                    var token = accessToken;
                    console.log("Token contacted user : " + accessToken);
                    var path = Routing.generate("growth_ajax_list_users");
                    var json = {"token": token, "pages": pages, "usersFacebookContacted": usersFacebookContacted };

                    $.post(path, json, function (response) {
                        $('#tab-data-user').html('');
                        //display in the div
                        $('#tab-data-user').append(response.result);
                    });
                });
                //if we click to display the added page interface
                $(document).on("click", "#added-page-btn", function () {
                    $('#added-page-container').show();
                    $('#add-user-container').hide();
                    $('#search-page-container').hide();
                    $('#contacted-user-container').hide();
                    $('#search-twitter-user-container').hide();
                    $('#contacted-twitter-user-container').hide();
                    $('#del-pages-btn').hide();

                    $('#tab-added-page').html('Loading ..');
                    //show added pages
                    var path = Routing.generate("growth_ajax_list_added_pages");
                    var json = {"pages": pages};

                    $.post(path, json, function (response) {
                        $('#tab-added-page').html('');
                        $('#del-pages-btn').show();
                        //display in the div
                        $('#tab-added-page').append(response.result);
                    });
                });
                //if we click to display the contacted user interface
                $(document).on("click", "#contacted-user-btn", function () {
                    $('#contacted-user-container').show();
                    $('#add-user-container').hide();
                    $('#search-page-container').hide();
                    $('#added-page-container').hide();
                    $('#search-twitter-user-container').hide();
                    $('#contacted-twitter-user-container').hide();

                    $('#tab-contacted-user').html('Loading ..');
                    //show contacted user
                    var path = Routing.generate("growth_ajax_list_contacted_users");
                    var json = {"usersFacebookContacted": usersFacebookContacted };

                    $.post(path, json, function (response) {
                        $('#tab-contacted-user').html('');
                        //display in the div
                        $('#tab-contacted-user').append(response.result);
                    });
                });

                //if we send the keyword for the pages
                $(document).on("click", "#sendData-btn", function () {
                    $('#del-pages-btn').hide();
                    $('#tab-data-page').html('Loading ..');
                    //send the token and keywords to the server
                    var token = accessToken;
                    var keyword = $('#input-keyword').val();
                    var path = Routing.generate("growth_ajax_list_pages");
                    var json = {"token": token, "keyword": keyword, "pages": pages};

                    $.post(path, json, function (response) {
                        $('#tab-data-page').html('');
                        //display in the div
                        $('#tab-data-page').append(response.result);
                    });
                });
                //if we click to add a page
                $(document).on('click', '.add-page', function () {
                    var button = $(this);
                    var id = button.attr("data-id");
                    var name = button.attr("data-name");

                    //call to server to add in database
                    var path = Routing.generate("growth_add_page");
                    var json = {"id": id, 'name': name, "email": email };

                    $.post(path, json, function (response) {
                        pages = response.pages;
                        //display in the div
                        switchButton(button);
                    });
                });
                //if we click to delete a page
                $(document).on('click', '.suppr-page', function () {
                    var button = $(this);
                    var id = button.attr("data-id");
                    var name = button.attr("data-name");

                    var path = Routing.generate("growth_delete_page");
                    var json = {"id": id, 'name': name , "email": email};

                    $.post(path, json, function (response) {
                        pages = response.pages;
                        //display in the div
                        if (response.code != 500)
                            switchButton(button);
                    });
                });
                //if we click to delete an added page
                $(document).on('click', '.suppr-page-fade', function () {
                    var button = $(this);
                    var id = button.attr("data-id");
                    var name = button.attr("data-name");
                    var ligneTab = $('tr[data-id = ' + id + ']');

                    var path = Routing.generate("growth_delete_page");
                    var json = {"id": id, 'name': name, "email": email };

                    $.post(path, json, function (response) {
                        pages = response.pages;
                        //display in the div
                        if (response.code != 500)
                            ligneTab.fadeOut();
                    });
                });
                //if we click to delete all pages
                $(document).on('click', '#del-pages-btn', function () {
                    var path = Routing.generate('growth_delete_all_pages');
                    var json = {};

                    $.post(path, json, function (response) {
                        $('#tab-added-page').html('Loading ..');
                        //show added pages
                        var path = Routing.generate("growth_ajax_list_added_pages");
                        var json = {"email": email };

                        $.post(path, json, function (response) {
                            $('#tab-added-page').html('');
                            $('#del-pages-btn').show();
                            //display in the div
                            $('#tab-added-page').append(response.result);
                        });
                    });
                });
                //if we click to add a user
                $(document).on('click', '.contact-user-btn', function () {
                    var button = $(this);
                    var id = button.attr("data-id");
                    var name = button.attr("data-name");

                    //call to server to add in database
                    var path = Routing.generate("growth_contact_user");
                    var json = {"id": id, 'name': name, "email": email, "usersFacebookContacted" : usersFacebookContacted };

                    $.post(path, json, function (response) {
                        usersFacebookContacted = response.usersFacebookContacted;
                        //display in the div
                        switchButton(button);
                    });
                });

                //TWITTER

                //if we click to display the contacted user interface
                $(document).on("click", "#find-twitter-user-btn", function () {
                    $('#search-twitter-user-container').show();
                    $('#contacted-user-container').hide();
                    $('#add-user-container').hide();
                    $('#search-page-container').hide();
                    $('#added-page-container').hide();
                    $('#contacted-twitter-user-container').hide();

                    //search new users
                    $('#tab-data-user').html('Loading ..');

                });

                $(document).on("click", "#sendTwitterData-btn", function () {
                    $('#tab-twitter-user').html('Loading ..');
                    //send the token and keywords to the server
                    //var token = accessToken;
                    var keyword = $('#input-keyword-twitter').val();
                    var path = Routing.generate("growth_ajax_list_users_twitter");
                    var json = {"keyword": keyword, "usersTwitterContacted": usersTwitterContacted };

                    $.post(path, json, function (response) {
                        $('#tab-twitter-user').html('');
                        //display in the div
                        $('#tab-twitter-user').append(response.result);
                    });
                });

                //if we click to display the contacted user interface
                $(document).on("click", "#contacted-twitter-user-btn", function () {
                    $('#contacted-twitter-user-container').show();
                    $('#search-twitter-user-container').hide();
                    $('#contacted-user-container').hide();
                    $('#add-user-container').hide();
                    $('#search-page-container').hide();
                    $('#added-page-container').hide();

                    $('#tab-contacted-twitter-user').html('Loading ..');
                    //show contacted user
                    var path = Routing.generate("growth_ajax_list_contacted_users_twitter");
                    var json = {"usersTwitterContacted": usersTwitterContacted };

                    $.post(path, json, function (response) {
                        $('#tab-contacted-twitter-user').html('');
                        //display in the div
                        $('#tab-contacted-twitter-user').append(response.result);
                    });
                });

                //if we click to add a twitter user
                $(document).on('click', '.contact-twitter-user-btn', function () {
                    var button = $(this);
                    var id = button.attr("data-id");
                    var name = button.attr("data-name");
                    var info = button.attr("data-info");

                    //call to server to add in database
                    var path = Routing.generate("growth_contact_twitter_user");
                    var json = {"id": id, 'name': name, 'info': info, "usersTwitterContacted": usersTwitterContacted, "email": email };

                    $.post(path, json, function (response) {
                        usersTwitterContacted = response.usersTwitterContacted;
                        //display in the div
                        switchButton(button);
                    });
                });

            });

            function getLoginStatus(display) {
                FB.getLoginStatus(function(response) {
                    if (response.status != 'unknown') {
                        if (display == 'pages') {
                            $('#search-page-container').show();
                            $('#add-user-container').hide();
                            $('#added-page-container').hide();
                            $('#contacted-user-container').hide();
                            $('#search-twitter-user-container').hide();
                            $('#contacted-twitter-user-container').hide();
                        }
                        if (display == 'users') {
                            $('#add-user-container').show();
                            $('#search-page-container').hide();
                            $('#added-page-container').hide();
                            $('#contacted-user-container').hide();
                            $('#search-twitter-user-container').hide();
                            $('#contacted-twitter-user-container').hide();
                        }
                    } else {
                        $('#isConnected').hide();
                        $('#search-page-container').hide();
                        $('#added-page-container').hide();
                        $('#add-user-container').hide();
                        $('#contacted-user-container').hide();
                        $('#search-twitter-user-container').hide();
                        $('#contacted-twitter-user-container').hide();
                        $('#isNotConnected').show();
                        toastr8.error({
                            title: "Connexion mandatory !",
                            message: "You have been logged out, you must login again on Facebook !",
                            iconClass: "fa fa-warning",
                            timeOut: 5000
                        });
                        return false;
                    }
                }, true); //On passe le paramètre à true, pour qu'il revérifie bien en dehors du cache si on est déconnecté
                          //Sinon, en pleine déconnexion de page, on ne voit pas la déconnexion
            };
        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) {
                return;
            }
            js = d.createElement(s);
            js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>
{% endblock %}
